getgenv().jjdkekd30y9 = "HUA Script"
(function(define)
  repeat
    game:GetService("RunService").Heartbeat:wait()
  until game:IsLoaded();
  
  local function check_exploit()
    return type(getgenv) == "function"
  end
  
  local whitelisted = true;
  local whitelist_table = {};

  local _CONFIGS = {
    ["UI_NAME"] = define,
    ["总开关"] = nil,
    ["防误触开关"] = true,
    ["cutPlankByHONG"] = nil,
    ["无限跳"] = false,
    ["穿墙开关"] = false,
    ["飞行开关"] = false,
    ["UI长"] = 250,
    ["UI宽"] = 300,
    ["传送模式"] = 2,
    ["飞行速度"] = 4,
    ["步行速度"] = 16,
    ["跳跃力"] = 50,
    ["悬浮高度"] = 0,
    ["重力"] = 198,
    ["相机焦距"] = 100,
    ["广角"] = 70,
  };

  local function ClearConfig()
    if _CONFIGS["总开关"] then
      _CONFIGS["总开关"]:Disconnect()
      _CONFIGS["总开关"] = nil;
    end
    
    if _CONFIGS["cutPlankByHONG"] then
      _CONFIGS["cutPlankByHONG"]:Disconnect();
      _CONFIGS["cutPlankByHONG"] = nil;
    end
    
    if getgenv().Test then
      getgenv().Test:Disconnect();
      getgenv().Test = nil;
    end
    
    if getgenv().CutWoodToSawmill then
      getgenv().CutWoodToSawmill:Disconnect()
      getgenv().CutWoodToSawmill = nil
    end
    
    if _G.HardDraggerConnection then
      _G.HardDraggerConnection:Disconnect()
      _G.HardDraggerConnection = nil
    end
    
    if clickSellLog then
      clickSellLog:Disconnect();
      clickSellLog = nil;
    end
    
    if mod then
      mod:Disconnect();
      mod = nil;
    end
    
    if _CONFIGS["自动砍树"] then
      _CONFIGS["自动砍树"]:Disconnect();
      _CONFIGS["自动砍树"] = nil;
    end
    
    if DayOfNight then
      DayOfNight:Disconnect()
      DayOfNight = nil
    end
    
    if getgenv().PlankToBp then
      getgenv().PlankToBp:Disconnect()
      getgenv().PlankToBp = nil
    end
    
    if _CONFIGS["粉车器"] then
      _CONFIGS["粉车器"]:Disconnect();
      _CONFIGS["粉车器"] = nil;
    end
  end
  
  ClearConfig()

  function ifError(msg)
    warn("脚本出问题辣!")
    writefile(string.format("HUA脚本错误日志%s.txt", os.date():sub(11):gsub(" ", "-")), string.format("具体错误原因为:\n %s", msg))
  end

  local HONG = {
    GS = function(...)
      return game:GetService(...);
    end;
  }

  HONG.RS = HONG.GS("RunService")
  HONG.RES = HONG.GS("ReplicatedStorage")
  HONG.LIGHT = HONG.GS("Lighting")
  HONG.TPS = HONG.GS("TeleportService")
  HONG.LP = HONG.GS("Players").LocalPlayer
  HONG.WKSPC = HONG.GS("Workspace")
  HONG.COREGUI = HONG.GS("CoreGui");
  local Mouse = HONG.LP:GetMouse()

  function HONG:printf(...)
    print(string.format(...));
  end

  function HONG:SelectNotify(...)
    local Args = {...}
    local NotificationBindable = Instance.new("BindableFunction")
    NotificationBindable.OnInvoke = Args[6]
    game.StarterGui:SetCore("SendNotification", {
      Title = Args[1],
      Text = Args[2],
      Icon = nil,
      Duration = Args[5],
      Button1 = Args[3],
      Button2 = Args[4],
      Callback = NotificationBindable
    })
    return Args
  end

  function HONG:DragModel(...)
    local Args = {...};
    assert(Args[1]:IsA("Model") == true, "参数1必须是模型!")
    if _CONFIGS["传送模式"] == 1 then
      pcall(function()
        self.RES.Interaction.ClientIsDragging:FireServer(Args[1])
      end);
      Args[1]:PivotTo(Args[2]);
    elseif _CONFIGS["传送模式"] == 2 then
      pcall(function()
        self.RES.Interaction.ClientIsDragging:FireServer(Args[1])
      end);
      if not Args[1].PrimaryPart then
        Args[1].PrimaryPart = Args[1]:FindFirstChildOfClass("Part")
      end
      Args[1]:SetPrimaryPartCFrame(Args[2])
    end
  end

  function HONG:Teleport(...)
    local Args = {...};
    if self.LP.Character and self.LP.Character:FindFirstChild("Humanoid") and self.LP.Character.Humanoid.SeatPart then
      spawn(function()
        for i = 1, 15 do
          self:DragModel(self.LP.Character.Humanoid.SeatPart.Parent, Args[1]);
        end
      end)
      return;
    end
    for i = 1, 3 do
      self:DragModel(self.LP.Character, Args[1]);
      task.wait();
    end
  end

  function HONG:TP(x, y, z)
    self:Teleport(CFrame.new(x, y, z));
  end

  function HONG:ServiceTP(ID)
    HONG.TPS:Teleport(ID, HONG.LP)
  end

  local function check_whitelist()
    local success, res = pcall(function()
      return game:HttpGet("https://pastebin.com/raw/4jyvAX4x")
    end)
    
    if success and res then
      whitelist_table = loadstring(res)() or {}
    else
      whitelist_table = {}
    end

    local plr = game:GetService("Players").LocalPlayer;
    for i, v in ipairs(whitelist_table) do
      if v == plr.Name then
        whitelisted = true;
        break;
      end
    end
  end
  
  check_whitelist()

  local function checkModify()
    local develop = {
      "GTAFAW",
      "",
      "",
      "",
      "",
      "",
      "",
    }
    
    local plr = game:GetService("Players").LocalPlayer;
    local is_dev = false;
    
    for i, v in ipairs(develop) do
      if v == plr.Name then
        is_dev = true;
        break;
      end
    end
    
    if (getgenv().jjdkekd30y9 ~= "HUA Script" or not getgenv().jjdkekd30y9) and not is_dev then
      plr:Kick("请不要修改代码");
      task.wait(.01);
    end
    getgenv().jjdkekd30y9 = nil;
  end

  local functions = {
    checkModify
  };
  
  for _, v in ipairs(functions) do
    pcall(v);
  end

  if whitelisted then
    local plr = game:GetService("Players").LocalPlayer;
    game.StarterGui:SetCore('SendNotification', {
      Title = '通知',
      Text = '玩家 : ' .. plr.Name .. ' 脚本已开始运行'
    })
    
    local _warn = warn;
    task.wait(0.5)
    
    _warn('---------------')
    _warn('欢迎' .. plr.Name .. '使用 HUA Script脚本')
    _warn('---------------')
    _warn('白名单玩家 : ' .. #whitelist_table .. ' 人')
    _warn('---------------')
    _warn('脚本作者: ')
    _warn('---------------')

    -- UI 部分
    local b = setmetatable({}, {
      __index = function(self, c)
        return game:GetService(c)
      end,
      __call = function(self, c)
        return game:GetService(c)
      end
    })
    
    if b.CoreGui:FindFirstChild(_CONFIGS.UI_NAME) then
      b.CoreGui[_CONFIGS.UI_NAME]:Destroy()
    end
    
    local dm = UDim.new
    local dn = UDim2.new
    local dp = Color3.fromRGB
    local dq = Instance.new
    local dr = function() end
    local ds = b.Players.LocalPlayer:GetMouse()
    
    getgenv().library = {
      flags = {
        GetState = function(dt, du)
          return library.flags[du].State
        end
      },
      modules = {},
      currentTab = nil
    }
    
    function library:UpdateToggle(du, be)
      local be = be or library.flags:GetState(du)
      if be == library.flags:GetState(du) then
        return
      end
      library.flags[du]:SetState(be)
    end
    
    local dv = {}
    function dv:Tween(dw, dx, dy, dz, dA)
      return b.TweenService:Create(
        dx, TweenInfo.new(dy or 0.25, Enum.EasingStyle[dz or "Linear"], Enum.EasingDirection[dA or "InOut"]), dw)
    end
    
    function dv:SwitchTab(dB)
      local dC = library.currentTab
      if dC == dB then
        return
      end
      library.currentTab = dB
      dv:Tween({Transparency = 1}, dC[2].Glow):Play()
      dv:Tween({Transparency = 0}, dB[2].Glow):Play()
      dC[1].Visible = false
      dB[1].Visible = true
    end
    
    local dD = dq("ScreenGui")
    local Open = dq("TextButton")
    local dE = dq("Frame")
    local dF = dq("UICorner")
    local dG = dq("TextLabel")
    local dH = dq("UICorner")
    local dI = dq("Frame")
    local dJ = dq("UICorner")
    local dK = dq("ScrollingFrame")
    local dL = dq("UIListLayout")
    local dM = dq("UIPadding")
    local dN = dq("Frame")
    local dO = dq("UICorner")
    
    dD.Name = _CONFIGS.UI_NAME
    dD.Parent = b.CoreGui
    dE.Name = "Main"
    dE.Parent = dD
    dE.BackgroundColor3 = dp(52, 62, 72)
    dE.BorderSizePixel = 0
    dE.Position = dn(0.5, 0, 0.5, 0)
    dE.Size = dn(0, 448, 0, 280)
    dE.AnchorPoint = Vector2.new(0.5, 0.5)
    dE.Active = true
    dE.Draggable = true
    
    dF.CornerRadius = dm(0, 6)
    dF.Name = "MainCorner"
    dF.Parent = dE
    
    dG.Parent = dE
    dG.BackgroundColor3 = dp(58, 69, 80)
    dG.BorderSizePixel = 0
    dG.Position = dn(0, 6, 0, 6)
    dG.Size = dn(0, 436, 0, 24)
    dG.Font = Enum.Font.GothamBold
    dG.Text = "  " .. _CONFIGS.UI_NAME;
    dG.TextColor3 = dp(255, 255, 255)
    dG.TextSize = 14.000
    dG.TextXAlignment = Enum.TextXAlignment.Left
    
    Open.Name = "Open"
    Open.Parent = dD
    Open.BackgroundColor3 = dE.BackgroundColor3;
    Open.Position = UDim2.new(0.839879155, 0, -0.0123076923, 0)
    Open.BorderSizePixel = 2
    Open.BorderColor3 = dG.BackgroundColor3
    Open.Size = UDim2.new(0, 55, 0, 25)
    Open.Font = Enum.Font.SourceSans
    Open.Text = "隐藏"
    Open.TextColor3 = Color3.fromRGB(255, 255, 255)
    Open.TextSize = 14.000
    Open.Active = true
    Open.Draggable = true
    
    local TOGGLE = true;
    Open.MouseButton1Down:connect(function()
      TOGGLE = not TOGGLE
      dE.Visible = TOGGLE
      Open.Text = TOGGLE and "隐藏" or "打开"
    end)
    
    dH.CornerRadius = dm(0, 6)
    dH.Name = "TextLabelCorner"
    dH.Parent = dG
    
    dI.Name = "Sidebar"
    dI.Parent = dE
    dI.BackgroundColor3 = dp(58, 69, 80)
    dI.BorderSizePixel = 0
    dI.Position = dn(0, 6, 0, 36)
    dI.Size = dn(0, 106, 0, 238)
    
    dJ.CornerRadius = dm(0, 6)
    dJ.Name = "SidebarCorner"
    dJ.Parent = dI
    
    dK.Name = "TabButtons"
    dK.Parent = dI
    dK.Active = true
    dK.BackgroundColor3 = dp(255, 255, 255)
    dK.BackgroundTransparency = 1.000
    dK.BorderSizePixel = 0
    dK.Size = dn(0, 106, 0, 238)
    dK.ScrollBarThickness = 0
    
    dL.Parent = dK
    dL.HorizontalAlignment = Enum.HorizontalAlignment.Center
    dL.SortOrder = Enum.SortOrder.LayoutOrder
    dL.Padding = dm(0, 5)
    
    dM.Parent = dK
    dM.PaddingTop = dm(0, 6)
    
    dN.Name = "TabHolder"
    dN.Parent = dE
    dN.BackgroundColor3 = dp(58, 69, 80)
    dN.BorderSizePixel = 0
    dN.Position = dn(0, 118, 0, 36)
    dN.Size = dn(0, 324, 0, 238)
    
    dO.CornerRadius = dm(0, 6)
    dO.Name = "TabHolderCorner"
    dO.Parent = dN
    
    dL:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
      dK.CanvasSize = dn(0, 0, 0, dL.AbsoluteContentSize.Y + 12)
    end)

    -- 通知系统创建
    local notificationHolder
    local notifAmount = 0
    local removedPos = nil
    
    local function createBaseNotifications()
      if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("NotificationHolder") then
        return game:GetService("Players").LocalPlayer.PlayerGui.NotificationHolder
      end
      
      local ScreenGui = Instance.new("ScreenGui")
      ScreenGui.Name = "NotificationHolder"
      ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
      ScreenGui.Parent = game:GetService("Players").LocalPlayer.PlayerGui
      
      return ScreenGui
    end
    
    notificationHolder = createBaseNotifications()
    
    function library:SelectNotify(args)
      args = args or {}
      -- 实现简化版通知系统
      game.StarterGui:SetCore("SendNotification", {
        Title = args.Title or "Title",
        Text = args.Text or "Text",
        Duration = args.Duration or 5,
      })
    end
    
    function library:Notify(args)
      args = args or {}
      game.StarterGui:SetCore("SendNotification", {
        Title = args.Title or "Title",
        Text = args.Text or "Text",
        Duration = args.Duration or 5,
      })
    end

    -- UI 创建函数
    function library:CreateTab(dZ)
      local d_ = dq("TextButton")
      local e0 = dq("UICorner")
      local e1 = dq("Frame")
      local e2 = dq("UICorner")
      local e3 = dq("UIGradient")
      local e4 = dq("ScrollingFrame")
      local e5 = dq("UIPadding")
      local e6 = dq("UIListLayout")
      
      d_.Name = "TabButton"
      d_.Parent = dK
      d_.BackgroundColor3 = dp(52, 62, 72)
      d_.BorderSizePixel = 0
      d_.Size = dn(0, 94, 0, 28)
      d_.AutoButtonColor = false
      d_.Font = Enum.Font.GothamSemibold
      d_.Text = dZ
      d_.TextColor3 = dp(255, 255, 255)
      d_.TextSize = 14.000
      
      e0.CornerRadius = dm(0, 6)
      e0.Name = "TabButtonCorner"
      e0.Parent = d_
      
      e1.Name = "Glow"
      e1.Parent = d_
      e1.BackgroundColor3 = dp(255, 255, 255)
      e1.BorderSizePixel = 0
      e1.Position = dn(0, 0, 0.928571463, 0)
      e1.Size = dn(0, 94, 0, 2)
      e1.Transparency = 1
      
      e2.CornerRadius = dm(0, 6)
      e2.Name = "GlowCorner"
      e2.Parent = e1
      
      e3.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0.00, dp(52, 62, 72)),
        ColorSequenceKeypoint.new(0.50, dp(255, 255, 255)),
        ColorSequenceKeypoint.new(1.00, dp(52, 62, 72))
      }
      e3.Name = "GlowGradient"
      e3.Parent = e1
      
      e4.Name = "Tab"
      e4.Parent = dN
      e4.Active = true
      e4.BackgroundColor3 = dp(255, 255, 255)
      e4.BackgroundTransparency = 1.000
      e4.BorderSizePixel = 0
      e4.Size = dn(0, 324, 0, 238)
      e4.ScrollBarThickness = 0
      e4.Visible = false
      
      if library.currentTab == nil then
        library.currentTab = {e4, d_}
        e1.Transparency = 0
        e4.Visible = true
      end
      
      e5.Name = "TabPadding"
      e5.Parent = e4
      e5.PaddingTop = dm(0, 6)
      
      e6.Name = "TabLayout"
      e6.Parent = e4
      e6.HorizontalAlignment = Enum.HorizontalAlignment.Center
      e6.SortOrder = Enum.SortOrder.LayoutOrder
      e6.Padding = dm(0, 5)
      
      e6:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        e4.CanvasSize = dn(0, 0, 0, e6.AbsoluteContentSize.Y + 12)
      end)
      
      d_.MouseButton1Click:Connect(function()
        dv:SwitchTab({e4, d_})
      end)
      
      local e7 = {}
      
      function e7:NewSeparator()
        local e8 = dq("Frame")
        e8.Transparency = 1
        e8.Size = dn(0, 0, 0, 0)
        e8.BorderSizePixel = 0
        e8.Parent = e4
      end
      
      function e7:NewButton(e9, ea)
        local ea = ea or dr
        local eb = dq("TextButton")
        local ec = dq("UICorner")
        
        eb.Name = "BtnModule"
        eb.Parent = e4
        eb.BackgroundColor3 = dp(52, 62, 72)
        eb.BorderSizePixel = 0
        eb.Size = dn(0, 312, 0, 28)
        eb.AutoButtonColor = false
        eb.Font = Enum.Font.GothamSemibold
        eb.Text = "  " .. e9
        eb.TextColor3 = dp(255, 255, 255)
        eb.TextSize = 14.000
        eb.TextXAlignment = Enum.TextXAlignment.Left
        
        ec.CornerRadius = dm(0, 6)
        ec.Name = "BtnModuleCorner"
        ec.Parent = eb
        
        eb.MouseButton1Click:Connect(ea)
      end
      
      function e7:NewToggle(e9, du, ed, ea)
        local ea = ea or dr
        local ed = ed or false
        local ee = dq("TextButton")
        local ef = dq("UICorner")
        local eg = dq("Frame")
        local eh = dq("UIGradient")
        local ei = dq("UICorner")
        local ej = dq("Frame")
        local ek = dq("UICorner")
        local el = dq("UIGradient")
        
        library.flags[du or e9] = {
          State = false,
          Callback = ea,
          SetState = function(self, be)
            local be = be ~= nil and be or not self.State
            self.State = be
            library.flags[du].Callback(be)
            dv:Tween({Transparency = be and 1 or 0}, eg):Play()
            dv:Tween({Transparency = be and 0 or 1}, ej):Play()
          end
        }
        
        ee.Name = "ToggleModule"
        ee.Parent = e4
        ee.BackgroundColor3 = dp(52, 62, 72)
        ee.BorderSizePixel = 0
        ee.Size = dn(0, 312, 0, 28)
        ee.AutoButtonColor = false
        ee.Font = Enum.Font.GothamSemibold
        ee.Text = "  " .. e9
        ee.TextColor3 = dp(255, 255, 255)
        ee.TextSize = 14.000
        ee.TextXAlignment = Enum.TextXAlignment.Left
        
        ef.CornerRadius = dm(0, 6)
        ef.Name = "ToggleModuleCorner"
        ef.Parent = ee
        
        eg.Name = "OffStatus"
        eg.Parent = ee
        eg.BackgroundColor3 = dp(255, 255, 255)
        eg.BorderSizePixel = 0
        eg.Position = dn(0.878205061, 0, 0.178571433, 0)
        eg.Size = dn(0, 34, 0, 18)
        
        eh.Color = ColorSequence.new{
          ColorSequenceKeypoint.new(0.00, dp(255, 83, 83)),
          ColorSequenceKeypoint.new(0.15, dp(255, 83, 83)),
          ColorSequenceKeypoint.new(0.62, dp(52, 62, 72)),
          ColorSequenceKeypoint.new(1.00, dp(52, 62, 72))
        }
        eh.Rotation = 300
        eh.Name = "OffGrad"
        eh.Parent = eg
        
        ei.CornerRadius = dm(0, 4)
        ei.Name = "OffStatusCorner"
        ei.Parent = eg
        
        ej.Name = "OnStatus"
        ej.Parent = ee
        ej.BackgroundColor3 = dp(255, 255, 255)
        ej.BackgroundTransparency = 1.000
        ej.BorderSizePixel = 0
        ej.Position = dn(0.878205121, 0, 0.178571433, 0)
        ej.Size = dn(0, 34, 0, 18)
        ej.Transparency = 1
        
        ek.CornerRadius = dm(0, 4)
        ek.Name = "OnStatusCorner"
        ek.Parent = ej
        
        el.Color = ColorSequence.new{
          ColorSequenceKeypoint.new(0.00, dp(52, 62, 72)),
          ColorSequenceKeypoint.new(0.38, dp(48, 57, 67)),
          ColorSequenceKeypoint.new(1.00, dp(53, 255, 134))
        }
        el.Rotation = 300
        el.Name = "OnGrad"
        el.Parent = ej
        
        ee.MouseButton1Click:Connect(function()
          library.flags[du or e9]:SetState()
        end)
        
        if ed then
          library.flags[du or e9]:SetState(ed)
        end
      end
      
      -- 其他UI元素创建函数（Slider, Dropdown等）保持类似结构
      
      return e7
    end

    -- 游戏功能部分
    _CONFIGS["总开关"] = HONG.RS.RenderStepped:Connect(function()
      pcall(function()
        if HONG.LP.Character and HONG.LP.Character:FindFirstChildOfClass("Humanoid") then
          HONG.LP.Character.Humanoid.WalkSpeed = _CONFIGS["步行速度"]
          HONG.LP.Character.Humanoid.JumpPower = _CONFIGS["跳跃力"]
          HONG.LP.Character.Humanoid.HipHeight = _CONFIGS["悬浮高度"]
        end
        
        HONG.WKSPC.Gravity = _CONFIGS["重力"]
        
        if HONG.WKSPC:FindFirstChild("Camera") then
          HONG.WKSPC.Camera.CameraMaxZoomDistance = _CONFIGS["相机焦距"]
          HONG.WKSPC.Camera.FieldOfView = _CONFIGS["广角"]
        end
      end)
    end)

    function HONG:NOTIFY(title, text, duration)
      library:Notify({
        Title = title, 
        Text = text,
        Duration = duration
      })
    end

    -- 创建标签页
    local Page1 = library:CreateTab("设置菜单")
    local Page2 = library:CreateTab("玩家菜单")
    local Page3 = library:CreateTab("传送菜单")

    -- 设置菜单
    Page1:NewToggle("防误触", "Mistouch", true, function(v)
      _CONFIGS["防误触开关"] = v
    end)

    Page1:NewButton("关闭脚本", function()
      if _CONFIGS["防误触开关"] then
        HONG:SelectNotify("防误触", "确定要关闭脚本吗?", "确定", "取消", 5, function(text)
          if text == "确定" then
            for i, v in next, HONG.COREGUI:GetDescendants() do
              if v.Name == _CONFIGS.UI_NAME then
                v:Destroy()
                ClearConfig()
              end
            end
          else
            HONG:NOTIFY("通知", "已取消", 4)
          end
        end)
      else
        for i, v in next, HONG.COREGUI:GetDescendants() do
          if v.Name == _CONFIGS.UI_NAME then
            v:Destroy()
            ClearConfig()
          end
        end
      end
    end)

    Page1:NewButton("重进服务器", function()
      if _CONFIGS["防误触开关"] then
        HONG:SelectNotify("防误触", "确定要重进服务器吗?", "确定", "取消", 5, function(text)
          if text == "确定" then
            HONG:ServiceTP(game.PlaceId)
          else
            HONG:NOTIFY("通知", "已取消", 4)
          end
        end)
      else
        HONG:ServiceTP(game.PlaceId)
      end
    end)

    Page1:NewSeparator()
    Page1:NewButton("Woof UI Library", function() end)

    -- 玩家菜单
    Page2:NewSlider("步行速度", "步行速度slider", 50, 16, 300, false, function(v)
      _CONFIGS["步行速度"] = v
    end)

    Page2:NewSlider("跳跃力", "跳跃力slider", 50, 50, 300, false, function(v)
      _CONFIGS["跳跃力"] = v
    end)

    Page2:NewSlider("飞行速度","飞行速度slider", 4, 1, 100, false, function(v)
      _CONFIGS["飞行速度"] = tonumber(v)
    end)

    -- 修复飞行功能
    Page2:NewToggle("飞行", "fly", false, function(bool)
      _CONFIGS["飞行开关"] = bool
      if bool then
        -- 飞行启用逻辑
        local bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.Velocity = Vector3.new(0, 0, 0)
        bodyVelocity.MaxForce = Vector3.new(0, 9e9, 0)
        bodyVelocity.Parent = HONG.LP.Character.HumanoidRootPart
        
        local userInputService = game:GetService("UserInputService")
        local camera = workspace.CurrentCamera
        
        local connection
        connection = userInputService.InputBegan:Connect(function(input)
          if input.UserInputType == Enum.UserInputType.Keyboard then
            local direction = Vector3.new(0, 0, 0)
            
            if input.KeyCode == Enum.KeyCode.W then
              direction = direction + camera.CFrame.LookVector
            elseif input.KeyCode == Enum.KeyCode.S then
              direction = direction - camera.CFrame.LookVector
            elseif input.KeyCode == Enum.KeyCode.A then
              direction = direction - camera.CFrame.RightVector
            elseif input.KeyCode == Enum.KeyCode.D then
              direction = direction + camera.CFrame.RightVector
            end
            
            bodyVelocity.Velocity = direction * _CONFIGS["飞行速度"] * 50
          end
        end)
      else
        -- 飞行禁用逻辑
        if HONG.LP.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
          HONG.LP.Character.HumanoidRootPart.BodyVelocity:Destroy()
        end
      end
    end)

    Page2:NewSlider("悬浮高度", "悬浮slider", 0, 0, 300, false, function(v)
      _CONFIGS["悬浮高度"] = v
    end)

    Page2:NewSlider("重力", "重力slider", 198, 0, 300, false, function(v)
      _CONFIGS["重力"] = v
    end)

    Page2:NewToggle("无限跳", "toggleInfJump", false, function(bool)
      _CONFIGS["无限跳"] = bool
      if bool then
        game:GetService("UserInputService").JumpRequest:Connect(function()
          HONG.LP.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
        end)
      end
    end)

    Page2:NewToggle("穿墙", "toggleNoclip", false, function(bool)
      _CONFIGS["穿墙开关"] = bool
      if bool then
        local noclipConnection
        noclipConnection = game:GetService("RunService").Stepped:Connect(function()
          for _, part in ipairs(HONG.LP.Character:GetDescendants()) do
            if part:IsA("BasePart") then
              part.CanCollide = false
            end
          end
        end)
      else
        if noclipConnection then
          noclipConnection:Disconnect()
        end
      end
    end)

    Page2:NewButton("安全自杀", function()
      if HONG.LP.Character and HONG.LP.Character:FindFirstChild("Head") then
        HONG.LP.Character.Head:Destroy()
      end
    end)

    Page2:NewButton("点击传送 [工具]", function()
      if HONG.LP.Backpack:FindFirstChild"点击传送" or HONG.LP.Character:FindFirstChild"点击传送" then
        return
      end
      
      local ClickToTeleport = Instance.new("Tool", HONG.LP.Backpack)
      ClickToTeleport.Name = "点击传送"
      ClickToTeleport.RequiresHandle = false
      ClickToTeleport.Activated:Connect(function()
        local hit = Mouse.Hit
        HONG:Teleport(CFrame.new(hit.X, hit.Y + 3, hit.Z))
      end)
    end)

    -- 其他功能类似处理...

    -- 传送菜单
    getgenv()["玩家们"] = {}
    for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
      table.insert(getgenv()["玩家们"], player.Name)
    end

    Page3:NewDropdown("选择玩家", "player_tp", getgenv()["玩家们"], function(plr)
      getgenv()["当前玩家"] = plr
    end)

    Page3:NewButton("传送到玩家身边!", function() 
      if getgenv()["当前玩家"] then
        local targetPlayer = game:GetService("Players")[getgenv()["当前玩家"]]
        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
          HONG:Teleport(targetPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0, 5, 0))
        end
      else
        HONG:NOTIFY("错误", "请先选择玩家", 4)
      end
    end)

    Page3:NewToggle("查看玩家", "viewPlayer", false, function(state)
      if state then
        if getgenv()["当前玩家"] then
          local targetPlayer = game:GetService("Players")[getgenv()["当前玩家"]]
          if targetPlayer and targetPlayer.Character then
            workspace.CurrentCamera.CameraSubject = targetPlayer.Character.Humanoid
            HONG:NOTIFY("正在观察", targetPlayer.Name, 4)
          end
        end
      else
        if HONG.LP.Character and HONG.LP.Character:FindFirstChild("Humanoid") then
          workspace.CurrentCamera.CameraSubject = HONG.LP.Character.Humanoid
        end
      end
    end)

    -- 玩家加入/离开处理
    game:GetService("Players").PlayerAdded:Connect(function(player)
      table.insert(getgenv()["玩家们"], player.Name)
      library.flags["player_tp"]:AddOption(player.Name)
      HONG:NOTIFY("玩家加入", player.Name .. "加入了服务器", 4)
    end)

    game:GetService("Players").PlayerRemoving:Connect(function(player)
      for i, name in ipairs(getgenv()["玩家们"]) do
        if name == player.Name then
          table.remove(getgenv()["玩家们"], i)
          break
        end
      end
      library.flags["player_tp"]:RemoveOption(player.Name)
      HONG:NOTIFY("玩家离开", player.Name .. "离开了服务器", 4)
    end)

    -- 位置标记功能
    Page3:NewButton("设置位置!", function() 
      if workspace:FindFirstChild("IIIII") then
        workspace.IIIII:Destroy()
      end
      
      local p = Instance.new("Part", workspace)
      p.Name = "IIIII"
      p.Transparency = 0.5
      p.Anchored = true
      p.CFrame = HONG.LP.Character.HumanoidRootPart.CFrame
      p.CanCollide = false
      p.Size = Vector3.new(2, 2, 2)
      p.Color = Color3.new(1, 0, 0)
      
      local posBox = Instance.new("SelectionBox", p)
      posBox.Name = "posBox"
      posBox.Adornee = p
      posBox.Color3 = Color3.new(1, 1, 1)
    end)

    Page3:NewButton("删除位置!", function() 
      if workspace:FindFirstChild("IIIII") then
        workspace.IIIII:Destroy()
      end
    end)

    Page3:NewButton("传送!", function() 
      if workspace:FindFirstChild("IIIII") then
        HONG:Teleport(workspace.IIIII.CFrame)
      end
    end)

  else
    game:GetService("Players").LocalPlayer:Kick("没有白名单, 请加作者QQ购买白名单")
  end
end)("GT2N2 | 自然灾害模拟器")